<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ZbEAAAAASUVORK5CYII=
</value>
  </data>
  <data name="guna2TextBox2.IconLeft" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABYAAAAWCAYAAADEtGw7AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EgAACxIB0t1+/AAAAOtJREFUSEvtktENgkAQRCmBEijBEiiBDrQES6AEO8AS7AA6oATtgBLON8l4iSHA
        Hf5o4iSTMLe7c8vuFX8kI4RwgD2c4B12sHJ4HzBobHiGJdQlLdQF+81t0FhG2Ly3zAOF6m60fAPn6n6y
        zMOasUAs+DMf6koXWEZwdoKDZT4o1tI059pHOtNCP1uegIG6k5G6Fwc4+4vdwEwLKy2/DO5OI9hinP0m
        SD7C1yyvG1SO5r8+cxIqJyZvnFx1rkaW50/wpkTLZFBzga3lHARHmP2U1AzsLOcg+IDZDz/FWKPIfqvU
        1HB5FD+AongCEak6SN16OIYAAAAASUVORK5CYII=
</value>
  </data>
  <data name="guna2TextBox3.IconLeft" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABYAAAAWCAYAAADEtGw7AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EgAACxIB0t1+/AAAANJJREFUSEvtle0NgkAQRK8ESqAES6AES6AESrADLcES7AA7oARKsAR8Y8aE5I7I
        4g+jcZKXsLe3w9cQ0kc1TVMFjam8vF2Y1NDDDa5GOsK2EzAo0xFOcxOvn2HwUkwePrjMRE93sthfFENS
        7TITPT3v3uU6yRBGl0Wt2ZPpe4zZqLy20IEipuMl5nv2UH4fNPQyFC+lIcoFNJubs6j4tC7DYlZ5z+Nn
        48ZlWDL9Gz/0W8bKYucyLGaV56LxDhRyXXmUAcofiKQGPH9BUd7/Zb1WSneYXeTVKWeCKQAAAABJRU5E
        rkJggg==
</value>
  </data>
</root>